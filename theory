Временные таблицы.
CREATE TEMPORARY TABLE `temptable` (`id` INT UNSIGNED,`name` VARCHAR(255)) SELECT
id,name (названия полей у временной таблицы, и таблицы откуда мы хотим выбрать значения
должны совпадать по имени)FROM `users`;
SELECT * FROM `temptable`;
DROP TEMPORARY TABLE `temptable`;
Перечень полей можно упустить, т.е. все указанные поля в СЕЛЕКТ добавятся во временную таблицу.
Также можно вставить данные через:
INSERT INTO `temptable` SELECT id,login from `user`;

Представление. VIEW

Именованный запрос. Можно делать выборки, в некоторых случаях можно делать вставки.
CREATE VIEW `v1` AS SELECT * FROM `users` WHERE id>2;
Теперь с этим представлением можно работать.
SELECT * FROM v1;
При помоще INSERT INTO в `v1` можно вставить какие-либо данные.
Но надо иметь в виду, что эти данные попадут и в основную таблицу.
Представление не хранит данные, мы храним в нем запрос.
VIEW хранится столько, сколько необходимо в отличие от временных таблиц.
К представлению можно давать права доступа, могут помогать при составлении сложно связанных
данных.
Если в представлении используется JOIN, то его нельзя будет редактировать.
Если у нас при создании представления используется условие, например WHERE id>2,
необходимо после условия указать WITH CHECK OPTION, что означает, что нельзя будет добавить
пользователя с id=1, при попытке вставки, будет проверяться условие.
Тажке существует команда CREATE OR REPLACE VIEW `v1`, т.е. у нас заменится наше предыдущее
представление.
DROP VIEW `v1`;

Переменые.
Если нам необходимо сохранить какое-то одно значение, можно использовать переменные.
SET @id=(SELECT `id` FROM `users` WHERE login='vasia');
SELECT @id; - посмотреть переменную.
Существование переменной ограничено одной сессией.